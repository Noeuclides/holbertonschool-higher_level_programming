``:matrix_divided(matrix, div)``.

Numbers
=======

``matrix_divided(matrix, div)`` returns the product of its arguments.  For numbers,
that value is equivalent to using the ``+`` operator.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided 
    >>> matrix = [[9,12,15], [1,2,3]]
    >>> matrix_divided(matrix, 3) 
    [[3, 12, 15], [0.33, 0.67, 1]

It also works with floating-point values.

::

    >>> matrix = [[9,12,15], [3]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size 

::
    >>> matrix_dividedd(3,3)
    Traceback (most recent call last):
    TypeError: 

::
    >>> matrix_divided(, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

::
    >>> matrix_divided(,sd)
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> matrix = [["ad",12,[15,232]], [3]]
    >>> matrix_divided(,)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats  

::
    >>> matrix_divided(,)
    Traceback (most recent call last):
    SyntaxError: invalid syntax

::
    >>> matrix_divided(,)
    21

::
    >>> matrix_divided(,)
    20

::
    >>> matrix_divided(,)
    -4

::
    >>> matrix_divided(,)
    98

::
    >>> matrix_divided(,)
    Traceback (most recent call last):
SyntaxError: invalid syntax )
